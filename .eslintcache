[{"C:\\Users\\HP\\Desktop\\Delta-LeGrand-website\\src\\index.js":"1","C:\\Users\\HP\\Desktop\\Delta-LeGrand-website\\src\\views\\App.js":"2","C:\\Users\\HP\\Desktop\\Delta-LeGrand-website\\src\\views\\LandingPage.js":"3","C:\\Users\\HP\\Desktop\\Delta-LeGrand-website\\src\\components\\Navbar.js":"4","C:\\Users\\HP\\Desktop\\Delta-LeGrand-website\\src\\assets\\content\\nav.js":"5","C:\\Users\\HP\\Desktop\\Delta-LeGrand-website\\src\\components\\CoreComponents.js":"6","C:\\Users\\HP\\Desktop\\Delta-LeGrand-website\\src\\components\\Footer.js":"7","C:\\Users\\HP\\Desktop\\Delta-LeGrand-website\\src\\views\\studies\\Nacelle.js":"8","C:\\Users\\HP\\Desktop\\Delta-LeGrand-website\\src\\assets\\content\\nacelle.js":"9","C:\\Users\\HP\\Desktop\\Delta-LeGrand-website\\src\\views\\studies\\Plateau.js":"10","C:\\Users\\HP\\Desktop\\Delta-LeGrand-website\\src\\assets\\content\\plateau.js":"11","C:\\Users\\HP\\Desktop\\Delta-LeGrand-website\\src\\views\\studies\\Simulation.js":"12","C:\\Users\\HP\\Desktop\\Delta-LeGrand-website\\src\\assets\\content\\simulation.js":"13","C:\\Users\\HP\\Desktop\\Delta-LeGrand-website\\src\\assets\\content\\team.js":"14"},{"size":435,"mtime":1610189496642,"results":"15","hashOfConfig":"16"},{"size":1280,"mtime":1610361410468,"results":"17","hashOfConfig":"16"},{"size":22347,"mtime":1611097272365,"results":"18","hashOfConfig":"16"},{"size":6711,"mtime":1611085810876,"results":"19","hashOfConfig":"16"},{"size":2818,"mtime":1611085841019,"results":"20","hashOfConfig":"16"},{"size":1569,"mtime":1610819706032,"results":"21","hashOfConfig":"16"},{"size":1682,"mtime":1610373669225,"results":"22","hashOfConfig":"16"},{"size":5995,"mtime":1611652556972,"results":"23","hashOfConfig":"16"},{"size":4752,"mtime":1611654947895,"results":"24","hashOfConfig":"16"},{"size":5990,"mtime":1611653288816,"results":"25","hashOfConfig":"16"},{"size":3840,"mtime":1611654968079,"results":"26","hashOfConfig":"16"},{"size":6020,"mtime":1611086319898,"results":"27","hashOfConfig":"16"},{"size":698,"mtime":1610360811313,"results":"28","hashOfConfig":"16"},{"size":1994,"mtime":1611091649215,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"m9vksc",{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\HP\\Desktop\\Delta-LeGrand-website\\src\\index.js",[],["63","64"],"C:\\Users\\HP\\Desktop\\Delta-LeGrand-website\\src\\views\\App.js",["65","66"],"import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\n// reactstrap components\r\nimport { Container, Row } from \"reactstrap\";\r\n\r\n//\r\nimport LandingPage from \"./LandingPage\";\r\nimport Nacelle from \"./studies/Nacelle\";\r\nimport Plateau from \"./studies/Plateau\";\r\nimport Simulation from \"./studies/Simulation\";\r\n\r\n\r\nexport default function Index(props) {\r\n\r\n  return(\r\n    <React.Fragment>  \r\n      <Switch>\r\n        {/* page d'aceuil */}\r\n        <Route \r\n          exact  path=\"/landing-page\" \r\n          render={() => <LandingPage />}\r\n          />  \r\n        <Route \r\n          exact path=\"/technical-sheet\" \r\n          render={() => <h1> Hello </h1>}\r\n          />\r\n        <Route \r\n          exact path=\"/our-studies\" \r\n          render={() => <h1> Hello </h1>}\r\n          />\r\n\r\n        { /* nos Ã©tudes */}\r\n        <Route \r\n          exact path=\"/studies-nacelle\" \r\n          render={() => <Nacelle />}\r\n          />\r\n\r\n        <Route \r\n          exact path=\"/studies-plateau\" \r\n          render={() => <Plateau />}\r\n          />\r\n\r\n        <Route \r\n          exact path=\"/studies-simulation\" \r\n          render={() => <Simulation />}\r\n          />\r\n\r\n        <Redirect to=\"/landing-page\"/>\r\n      </Switch>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","C:\\Users\\HP\\Desktop\\Delta-LeGrand-website\\src\\views\\LandingPage.js",[],"C:\\Users\\HP\\Desktop\\Delta-LeGrand-website\\src\\components\\Navbar.js",["67","68","69","70","71","72"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// JavaScript plugin that hides or shows a component based on your scroll\r\nimport Headroom from \"headroom.js\";\r\n\r\nimport { arrSocialMedia, arrRoutesNav } from \"../assets/content/nav\"\r\nimport deltaLeGrandLogo from \"../assets/img/brand/delta-le-grand-logo.png\";\r\n\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    UncontrolledCollapse,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    DropdownToggle,\r\n    UncontrolledDropdown,\r\n    Media,\r\n    NavbarBrand,\r\n    Navbar,\r\n    NavItem,\r\n    NavLink,\r\n    Nav,\r\n    Container,\r\n    Row,\r\n    Col,\r\n    UncontrolledTooltip\r\n  } from \"reactstrap\";\r\n\r\n\r\nexport function NavbarLandingPage(props) {\r\n    const [collapseClasses, setCollapseClasses] = useState(\"\");\r\n    const [collapseOpen, setCollapseOpen] = useState(false);\r\n\r\n    const withHeadroom = props.headroom;\r\n\r\n    useEffect(() => {\r\n      // if the functionnality is enabled\r\n      if(withHeadroom) {\r\n        let headroom = new Headroom(document.getElementById(\"navbar-main\"));\r\n        // initialise\r\n        headroom.init();\r\n      }\r\n    }, []);\r\n\r\n    return(\r\n        <header className=\"header-global\">\r\n          <Navbar\r\n            className=\"navbar-main navbar-transparent navbar-light headroom\"\r\n            expand=\"lg\"\r\n            id=\"navbar-main\"\r\n            >\r\n              <>\r\n                {/*brand */}\r\n                <NavbarBrand className=\"mr-lg-5\" to=\"/\" tag={Link}>\r\n                  <img\r\n                    alt=\"...\"\r\n                    src={\"\"}\r\n                  />\r\n                </NavbarBrand>\r\n                \r\n                {/* routes */}\r\n                <button className=\"navbar-toggler\" id=\"navbar_global\">\r\n                    <span className=\"navbar-toggler-icon\" />\r\n                </button>\r\n                <UncontrolledCollapse\r\n                    toggler=\"#navbar_global\"\r\n                    navbar\r\n                    className={collapseClasses}\r\n                    onExiting={() => setCollapseClasses(\"collapsing-out\")}\r\n                    onExited={() => setCollapseClasses(\"\")}\r\n                    >\r\n\r\n                    <div className=\"navbar-collapse-header\">\r\n                      <Row>\r\n                        <Col className=\"collapse-brand\" xs=\"6\">\r\n                          <Link to=\"/\">\r\n                            <img\r\n                              alt=\"...\"\r\n                              src={deltaLeGrandLogo}\r\n                            />\r\n                          </Link>\r\n                        </Col>\r\n                        <Col className=\"collapse-close\" xs=\"6\">\r\n                          <button className=\"navbar-toggler\" id=\"navbar_global\">\r\n                            <span />\r\n                            <span />\r\n                          </button>\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n\r\n                    <Nav className=\"navbar-nav-hover align-items-lg-center\" navbar>\r\n                        <NavItem tag={Link} to=\"/landing-page\">\r\n                          <NavLink>\r\n                            Accueil\r\n                          </NavLink>\r\n                        </NavItem>\r\n\r\n                        {arrRoutesNav.map((route, i) => \r\n                            <NavDetail key={`navbar-landing-page-routes-${i}`} routeDetailObject={route}/>\r\n                        )}\r\n\r\n                        <NavItem>\r\n                          <NavLink tag={Link} href=\"\">\r\n                            Remerciement\r\n                          </NavLink>\r\n                        </NavItem>\r\n                    </Nav> \r\n\r\n                    {/* social media */}\r\n                    <Nav className=\"align-items-lg-center ml-lg-auto\" navbar>\r\n                        {arrSocialMedia.map((item, i) => \r\n                            <NavSocialMedia key={`navbar-landing-page-social-media-${i}`} {...item}/>\r\n                        )}\r\n                    </Nav>\r\n                </UncontrolledCollapse>\r\n\r\n                \r\n              </>\r\n          </Navbar>\r\n        </header>\r\n    );\r\n}\r\n\r\n\r\nexport function NavDetail(props) {\r\n    const { routeName, arrFeatures} = props.routeDetailObject;\r\n\r\n    return(\r\n        <UncontrolledDropdown nav>\r\n            <DropdownToggle nav>\r\n                \r\n                <span className=\"nav-link-inner--text\">{routeName}</span>\r\n            </DropdownToggle>\r\n\r\n            <DropdownMenu className=\"dropdown-menu-xl\">\r\n                <div className=\"dropdown-menu-inner\">\r\n                    {arrFeatures.map((feature, i) => {\r\n                        return(\r\n                            <Media\r\n                                tag={Link}\r\n                                key={`nav-item-${routeName}-${i}`}\r\n                                className=\"d-flex align-items-center\"\r\n                                to={feature.href}\r\n                                >\r\n                                {/* icon */}\r\n                                <div className=\"icon icon-shape bg-gradient-primary rounded-circle text-white\">\r\n                                  <i className={feature.iconClassName} />\r\n                                </div>\r\n\r\n                                {/* content */}\r\n                                <Media body className=\"ml-3\">\r\n                                    <h6 className=\"heading text-primary mb-md-1\">\r\n                                        {feature.title}\r\n                                    </h6>\r\n                                    <p className=\"description d-none d-md-inline-block mb-0\">\r\n                                        {feature.description}\r\n                                    </p>\r\n                                </Media>\r\n                            </Media>\r\n                        );\r\n                    })}\r\n                </div>    \r\n            </DropdownMenu>\r\n        </UncontrolledDropdown>\r\n    );\r\n}\r\n\r\n\r\nexport function NavSocialMedia(props) {\r\n    const { socialNetwork, iconClassName, description, href } = props;\r\n    const id = `tooltip${socialNetwork}-${Math.floor(Math.random() * 1000)}`;\r\n\r\n    return(\r\n        <NavItem>\r\n            <NavLink\r\n              className=\"nav-link-icon\"\r\n              href={href}\r\n              id={id}\r\n              target=\"_blank\"\r\n            >\r\n              <i className={iconClassName} />\r\n              <span className=\"nav-link-inner--text d-lg-none ml-2\">\r\n                {socialNetwork}\r\n              </span>\r\n            </NavLink>\r\n            <UncontrolledTooltip delay={0} target={id}>\r\n              {description}\r\n            </UncontrolledTooltip>\r\n        </NavItem>\r\n    );\r\n}","C:\\Users\\HP\\Desktop\\Delta-LeGrand-website\\src\\assets\\content\\nav.js",[],"C:\\Users\\HP\\Desktop\\Delta-LeGrand-website\\src\\components\\CoreComponents.js",[],"C:\\Users\\HP\\Desktop\\Delta-LeGrand-website\\src\\components\\Footer.js",["73","74","75","76","77"],"import React from \"react\";\r\n\r\n// reactstrap components\r\nimport { Button, NavItem, NavLink, Nav, Container, Row, Col, UncontrolledTooltip } from \"reactstrap\";\r\n\r\nimport { NavSocialMedia } from \"./Navbar\";\r\nimport { arrSocialMedia } from \"../assets/content/nav\";\r\n\r\n\r\nexport default function functionFooter (props) {\r\n  const isSimple = !props.isSimple;\r\n\r\n  const Ending = (\r\n    <Row className=\" row-grid align-items-center mb-5\">\r\n      <Col lg=\"6\">\r\n          <h3 className=\" text-primary font-weight-light mb-2\">\r\n            Team Delta Le Grand vous salue !\r\n          </h3>\r\n          <h4 className=\" mb-0 font-weight-light\">\r\n            N'hÃ©siter pas Ã  nous suivre\r\n          </h4>\r\n      </Col>\r\n    </Row>\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <footer className=\"footer mt-5\">\r\n        <Container>\r\n          {isSimple && Ending}\r\n          <hr />\r\n          <Row className=\" align-items-center justify-content-md-between\">\r\n            <Col md=\"6\">\r\n              <div className=\" copyright\">\r\n                Â© {new Date().getFullYear()}{\" \"}\r\n                <a\r\n                  href=\"\"\r\n                  target=\"_blank\"\r\n                >\r\n                  Team Delta Le Grand\r\n                </a>\r\n                .\r\n              </div>\r\n            </Col>\r\n            <Col md=\"6\">\r\n              <Nav className=\" nav-footer justify-content-end\">\r\n                  {arrSocialMedia.map((item, i) => \r\n                      <NavSocialMedia key={`navbar-footer-social-media-${i}`} {...item}/>\r\n                  )}\r\n              </Nav>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </footer>\r\n    </React.Fragment>\r\n  );\r\n\r\n}\r\n","C:\\Users\\HP\\Desktop\\Delta-LeGrand-website\\src\\views\\studies\\Nacelle.js",[],"C:\\Users\\HP\\Desktop\\Delta-LeGrand-website\\src\\assets\\content\\nacelle.js",[],"C:\\Users\\HP\\Desktop\\Delta-LeGrand-website\\src\\views\\studies\\Plateau.js",[],"C:\\Users\\HP\\Desktop\\Delta-LeGrand-website\\src\\assets\\content\\plateau.js",[],"C:\\Users\\HP\\Desktop\\Delta-LeGrand-website\\src\\views\\studies\\Simulation.js",["78"],"import React, { useState } from \"react\";\r\n\r\n// for scrolling\r\nimport Scrollspy from 'react-scrollspy'\r\n\r\n// reactstrap components\r\nimport {Card, Container, Row, Col, Nav, NavItem, NavbarBrand, Collapse } from \"reactstrap\";\r\n\r\n// core components\r\nimport { NavbarLandingPage } from \"components/Navbar\";\r\nimport { GradientSectionWithCircles } from \"components/CoreComponents\";\r\nimport Footer from \"components/Footer\";\r\n\r\nimport { sidebarLinks, content } from \"assets/content/simulation\";\r\n\r\n\r\nexport default function Simulation(props) {\r\n    const [activeLink, setActiveLink] = useState(\"nacelle-schema-cinematique\");\r\n    const [openOutlines, setOpenOutlines] = useState(true);\r\n\r\n    const routeHeader = {\r\n        iconClassName: \"ni ni-hat-3\",\r\n        title: \"Receuil Des Etudes\"\r\n    }\r\n\r\n    const sectionTitle = \"Simulation Des Efforts\";\r\n\r\n\r\n    return (\r\n      <>\r\n        <NavbarLandingPage />\r\n        <GradientSectionWithCircles>\r\n            <Container className=\"shape-container d-flex align-items-center py-lg\">\r\n                <div className=\"col px-0\">\r\n                    <Row className=\"align-items-center justify-content-center\">\r\n                        <Col className=\"text-center\" lg=\"6\">\r\n                            <h3 className=\"display-3 mb-0 text-white\">\r\n                                <div className=\"icon icon-lg icon-shape icon-shape-white shadow rounded-circle mb-2 mr-4\">\r\n                                    <i className={routeHeader.iconClassName} />\r\n                                </div>\r\n                                {routeHeader.title}\r\n                            </h3>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </Container>\r\n        </GradientSectionWithCircles>\r\n\r\n        <section className=\"section\">\r\n            <Container>\r\n                <Card className=\"card-profile shadow mt--300\">\r\n\r\n                    <Row className=\"mr-5 ml-5\">\r\n                        <Col \r\n                            className=\"lg-border-right pt-5 pb-5 sticky-top bg-white\" \r\n                            style={{ height: \"300px\", zIndex: \"10\"}} \r\n                            xs={12}\r\n                            lg={3}\r\n                            >\r\n                            <Nav vertical>    \r\n                                <NavbarBrand \r\n                                    className=\"mb-3 border-bottom\" \r\n                                    tag=\"h3\"\r\n                                    onClick={() => setOpenOutlines(!openOutlines)}\r\n                                    >\r\n                                    <h3 className=\"text-capitalize\">\r\n                                         Simulation <br/> Des Efforts \r\n                                    </h3>\r\n                                </NavbarBrand>\r\n\r\n                                <Collapse isOpen={openOutlines}>\r\n                                    {sidebarLinks.map((item, i) => {\r\n                                        return(\r\n                                            <NavItem tag=\"h6\" key={`nacelle-sidebar-${i}`}> \r\n                                                <a \r\n                                                    href={item.href} \r\n                                                    className={((activeLink !== item.href.slice(1)) ? \"nav-link\" : \"nav-link active-sidebar\") + \" text-muted\"}\r\n                                                    >\r\n                                                    {item.text}\r\n                                                </a> \r\n                                            </NavItem>\r\n                                        );\r\n                                    })}\r\n                                </Collapse>\r\n                            </Nav>\r\n                        </Col>\r\n\r\n                        <Col xs={12} lg={9} className=\"mt-6\">\r\n                            <Scrollspy \r\n                                items={content.map((item) => item.id)} \r\n                                currentClassName=\"active\" \r\n                                onUpdate={(e) => { \r\n                                    if(e) {\r\n                                        setActiveLink(e.id)\r\n                                    }\r\n                                }}\r\n                                >\r\n                                {content.map((item, i) => {\r\n                                    return(\r\n                                        <Row \r\n                                            key={`nacelle-content-${i}`}\r\n                                            id={item.id} \r\n                                            className=\"mb-5\"\r\n                                            >\r\n                                            <Col xs={12} lg={8}>\r\n                                                <h4>{item.title}</h4>\r\n                                                <p>{item.description}</p>\r\n                                                <p>{item.description}</p>\r\n                                                <p>{item.description}</p>\r\n                                                <p>{item.description}</p>\r\n                                                <p>{item.description}</p>\r\n                                            </Col>\r\n                                            <Col \r\n                                                className=\"d-flex justify-content-center align-items-center\"\r\n                                                xs={12} lg={4}\r\n                                                >\r\n                                                <p>image here</p>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    );\r\n                                })}\r\n                            </Scrollspy>\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n            </Container>\r\n        </section>\r\n\r\n        <Footer isSimple={true}/>\r\n      </>\r\n    );\r\n}\r\n","C:\\Users\\HP\\Desktop\\Delta-LeGrand-website\\src\\assets\\content\\simulation.js",[],"C:\\Users\\HP\\Desktop\\Delta-LeGrand-website\\src\\assets\\content\\team.js",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":5,"column":10,"nodeType":"85","messageId":"86","endLine":5,"endColumn":19},{"ruleId":"83","severity":1,"message":"87","line":5,"column":21,"nodeType":"85","messageId":"86","endLine":5,"endColumn":24},{"ruleId":"83","severity":1,"message":"88","line":12,"column":5,"nodeType":"85","messageId":"86","endLine":12,"endColumn":11},{"ruleId":"83","severity":1,"message":"89","line":15,"column":5,"nodeType":"85","messageId":"86","endLine":15,"endColumn":17},{"ruleId":"83","severity":1,"message":"84","line":24,"column":5,"nodeType":"85","messageId":"86","endLine":24,"endColumn":14},{"ruleId":"83","severity":1,"message":"90","line":33,"column":12,"nodeType":"85","messageId":"86","endLine":33,"endColumn":24},{"ruleId":"83","severity":1,"message":"91","line":33,"column":26,"nodeType":"85","messageId":"86","endLine":33,"endColumn":41},{"ruleId":"92","severity":1,"message":"93","line":44,"column":8,"nodeType":"94","endLine":44,"endColumn":10,"suggestions":"95"},{"ruleId":"83","severity":1,"message":"88","line":4,"column":10,"nodeType":"85","messageId":"86","endLine":4,"endColumn":16},{"ruleId":"83","severity":1,"message":"96","line":4,"column":18,"nodeType":"85","messageId":"86","endLine":4,"endColumn":25},{"ruleId":"83","severity":1,"message":"97","line":4,"column":27,"nodeType":"85","messageId":"86","endLine":4,"endColumn":34},{"ruleId":"83","severity":1,"message":"98","line":4,"column":62,"nodeType":"85","messageId":"86","endLine":4,"endColumn":81},{"ruleId":"99","severity":1,"message":"100","line":36,"column":17,"nodeType":"101","endLine":39,"endColumn":18},{"ruleId":"83","severity":1,"message":"102","line":26,"column":11,"nodeType":"85","messageId":"86","endLine":26,"endColumn":23},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","'Button' is defined but never used.","'DropdownItem' is defined but never used.","'collapseOpen' is assigned a value but never used.","'setCollapseOpen' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'withHeadroom'. Either include it or remove the dependency array.","ArrayExpression",["105"],"'NavItem' is defined but never used.","'NavLink' is defined but never used.","'UncontrolledTooltip' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'sectionTitle' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},"Update the dependencies array to be: [withHeadroom]",{"range":"108","text":"109"},[1144,1146],"[withHeadroom]"]